{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/Header/logo.svg","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","TdControls","TdName","Button","button","Coin","props","name","ticker","price","showBalance","balance","action","method","className","onClick","event","preventDefault","handleRefresh","tickerId","handleTransaction","Table","table","CoinList","coinData","map","key","Section","section","Balance","div","ToggleBalanceButton","formatter","Intl","NumberFormat","style","currency","AccountBalance","buttonText","content","format","amount","buttonClass","handleToggleBalance","handleAirdrop","AppHeader","header","Img","img","H1","h1","Header","src","logo","alt","Component","Div","formatPrice","parseFloat","Number","toFixed","App","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","useEffect","length","valueChangeTickerId","tickerUrl","newPrice","newCoinData","values","newValues","oldValue","oldBalance","isBuy","balanceChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24c9e0f1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Td = styled.td`\n    border: 1px solid #cccccc;\n    width: 14vw;\n`;\n\nconst TdControls = styled(Td)`\n    width: 34vw;\n`;\n\nconst TdName = styled(Td)`\n    width: 24vw;\n`;\n\nconst Button = styled.button`\n    font-size: 11px;\n    width: 64px;\n    margin: 3px 5px 0;\n`;\n\nexport default function Coin(props) {\n    const handleRefresh = (event) => {\n        event.preventDefault();\n        props.handleRefresh(props.tickerId);\n    }\n    const handleBuy = (event) => {\n        event.preventDefault();\n        props.handleTransaction(true, props.tickerId);\n    }\n    const handleSell = (event) => {\n        event.preventDefault();\n        props.handleTransaction(false, props.tickerId);\n    }\n    return (\n        <tr>\n            <TdName>{props.name}</TdName>\n            <Td>{props.ticker}</Td>\n            <Td>${props.price}</Td>\n            <Td>{ props.showBalance ? props.balance : '-' }</Td>\n            <TdControls>\n                <form action=\"#\" method=\"POST\">\n                    <Button className=\"btn btn-info\" onClick={handleRefresh}>\n                        Refresh\n                    </Button>\n                    <Button className=\"btn btn-warning\" onClick={handleBuy}>\n                        Buy\n                    </Button>\n                    <Button className=\"btn btn-danger\" onClick={handleSell}>\n                        Sell\n                    </Button>\n                </form>\n            </TdControls>\n        </tr>\n    )\n}\n\nCoin.propTypes = {\n    name: PropTypes.string,\n    ticket: PropTypes.string,\n    price: PropTypes.number\n}\n","import React from 'react';\nimport Coin from '../Coin/Coin';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n  font-size: 1rem;\n`;\n\nexport default function CoinList(props) {\n  return (\n      <Table className=\"table table-primary table-bordered\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Ticker</th>\n          <th>Price</th>\n          <th>Balance</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          props.coinData.map( ({ key, name, ticker, price, balance }) => \n            <Coin key={key}\n                  tickerId={key} \n                  handleRefresh={props.handleRefresh} \n                  handleTransaction={props.handleTransaction} \n                  name={name} \n                  ticker={ticker} \n                  price={price}\n                  balance={balance}\n                  showBalance={props.showBalance} />\n          )\n        }\n      </tbody>\n  </Table>\n  )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Section = styled.section`\n    font-size: 2rem;\n    text-align: center;\n    margin-bottom: 2rem;\n    line-height: 3rem;\n`;\n\nconst Div = styled.div`\n    float: left;\n`;\n\nconst Balance = styled.div`\n    min-width: 250px;\n    margin: 0.5rem 0 0 2.5rem;\n    font-size: 1.5em;\n    vertical-align: middle;\n    text-align: left;\n`;\n\nconst Button = styled.button`\n    margin: 0 8px;\n`;\n\nconst ToggleBalanceButton = styled(Button)`\n    width: 150px;\n`;\n\nvar formatter = Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n});\n\nexport default function AccountBalance(props) {\n    const buttonText =  props.showBalance ? 'Hide Balance' : 'Show Balance';\n    let content = '\\u00A0';\n    if ( props.showBalance ) {\n        content = <>{ formatter.format(props.amount)}</>\n    }\n    const buttonClass = 'btn ' + (props.showBalance ? 'btn-warning' : 'btn-info');\n    return (\n        <>\n            <Balance>{ content }</Balance>\n            <Section>\n                <ToggleBalanceButton onClick={props.handleToggleBalance}\n                        className={buttonClass}>\n                        {buttonText}\n                </ToggleBalanceButton>\n                <Button onClick={props.handleAirdrop}\n                        className=\"btn btn-success\">\n                    <i className=\"fas fa-helicopter\"></i>\n                </Button>\n            </Section>\n        </>\n    )\n}\n\nAccountBalance.propTypes = {\n    amount: PropTypes.number\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg'\nimport styled from 'styled-components';\n\nconst AppHeader = styled.header`\n    background-color: #282c34;\n    min-height: 10vh;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n    color: white;\n`;\n\nconst Img = styled.img`\n    height: 8rem;\n    pointer-events: none;\n`;\n\nconst H1 = styled.h1`\n    font-size: 3rem;\n    line-height: 8rem;\n    font-weight: bold;\n    min-width: 300px;\n`;\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <AppHeader>\n                <Img src={logo} alt=\"React logo\"></Img>\n                <H1>\n                    Coin Exchange\n                </H1>\n            </AppHeader>\n        )\n    }\n}","import React, { useState, useEffect } from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport Header from './components/Header/Header';\nimport styled from 'styled-components';\nimport axios from 'axios';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/js/all';\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: #144957;\n  color: #cccccc;\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\nfunction App(props) {\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(false);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async() => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes['USD'].price),\n      }\n    });\n    setCoinData(coinPriceData);\n  }\n\n  useEffect(function() {\n    if (coinData.length === 0) {\n      componentDidMount();\n    }\n  });\n\n  const handleRefresh = async (valueChangeTickerId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeTickerId}`;\n    const response = await axios.get(tickerUrl);\n    const newPrice = formatPrice(response.data.quotes['USD'].price);\n\n    const newCoinData = coinData.map(function (values) {\n      let newValues = {...values};\n      if (valueChangeTickerId === values.key) {\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n\n  const handleTransaction = (isBuy, valueChangeTickerId) => {\n    const balanceChange = isBuy ? 1 : -1;\n    const newCoinData = coinData.map(function(values) {\n      let newValues = {...values};\n      if (valueChangeTickerId === values.key) {\n        // Need to debug some error in here. Clicking buy negates balance at top of screen and\n        // the balance in the table is not updating properly....\n        newValues.balance += balanceChange;\n        // newValues.balance = values.balance - balanceChange * newValues.price;\n        setBalance(oldBalance => oldBalance - balanceChange * newValues.price);\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n\n  const handleAirdrop = () => {\n    setBalance(oldBalance => oldBalance + 1000);\n  }\n  \n  const handleToggleBalance = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  return (\n    <Div>\n      <Header/>\n      <AccountBalance amount={balance} \n                      handleToggleBalance={handleToggleBalance}\n                      handleAirdrop={handleAirdrop}\n                      showBalance={showBalance} />\n      <CoinList coinData={coinData} \n                handleRefresh={handleRefresh} \n                handleTransaction={handleTransaction} \n                showBalance={showBalance}/>\n    </Div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}